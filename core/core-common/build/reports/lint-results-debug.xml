<?xml version="1.0" encoding="UTF-8"?>
<issues format="6" by="lint 8.11.0">

    <issue
        id="GradleDependency"
        severity="Warning"
        message="A newer version of `compileSdkVersion` than 35 is available: 36"
        category="Correctness"
        priority="4"
        summary="Obsolete Gradle Dependency"
        explanation="This detector looks for usages of libraries where the version you are using is not the current stable release. Using older versions is fine, and there are cases where you deliberately want to stick with an older version. However, you may simply not be aware that a more recent version is available, and that is what this lint check helps find."
        errorLine1="    compileSdk = 35"
        errorLine2="    ~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\rowdy\AndroidStudioProjects\rooster-poultry-management\core\core-common\build.gradle.kts"
            line="10"
            column="5"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        severity="Warning"
        message="Unnecessary; `SDK_INT` is always >= 24"
        category="Performance"
        priority="6"
        summary="Obsolete SDK_INT Version Check"
        explanation="This check flags version checks that are not necessary, because the `minSdkVersion` (or surrounding known API level) is already at least as high as the version checked for.&#xA;&#xA;Similarly, it also looks for resources in `-vNN` folders, such as `values-v14` where the version qualifier is less than or equal to the `minSdkVersion`, where the contents should be merged into the best folder."
        errorLine1="    return if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {"
        errorLine2="               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\rowdy\AndroidStudioProjects\rooster-poultry-management\core\core-common\src\main\java\com\example\rooster\core\common\Extensions.kt"
            line="46"
            column="16"/>
    </issue>

</issues>
